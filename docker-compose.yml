version: '3.2'

services:

  rabbitmq:
    image:  rabbitmq:3.7.3-management
    environment:
      RABBITMQ_DEFAULT_USER: celery
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: my_vhost
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - elk

  celery_worker:
    build:
      context: celery_app/
    command: bash -c "celery -A celery_app.main worker -l info --concurrency=30"
    restart: always
    depends_on:
      - rabbitmq
      - elasticsearch
    networks:
      - elk

  celery_producer:
    image: crawlersystem_celery_worker:latest
    tty: true
    restart: always
    volumes:
      - type: bind
        source: ./celery_app/crawler.py
        target: /app/crawler.py
    depends_on:
      - celery_worker
    networks:
      - elk

  cleanup:
    image: crawlersystem_celery_worker:latest
    command: bash -c "celery -A celery_app.main beat"
    restart: always
    volumes:
      - type: bind
        source: .
        target: /app/
    depends_on:
      - celery_worker
    networks:
      - elk

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: ./mydata
        target: /usr/mydata
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
